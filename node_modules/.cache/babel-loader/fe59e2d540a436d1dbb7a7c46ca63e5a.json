{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/foris-react-redux/client/src/AuthContext.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { firebaseAuth } from './util/firebase';\nimport { useLocation } from 'react-router-dom';\nimport history from './util/history';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [globalLoading, setGlobalLoading] = React.useState(true);\n  const [currentPath, setCurrentPath] = React.useState('');\n  const location = useLocation();\n  const [user, setUser] = React.useState({\n    uid: ''\n  });\n  React.useEffect(() => {\n    setCurrentPath(location.pathname);\n  }, [location]);\n  React.useEffect(() => {\n    firebaseAuth.onAuthStateChanged(result => {\n      if (result) {\n        if (result.uid !== user.uid) {\n          setUser(result);\n          setGlobalLoading(false);\n\n          if (currentPath.match(/(auth\\/signin|auth\\/signup)/)) {\n            history.push('/schools');\n          }\n        } else {\n          setGlobalLoading(false);\n        }\n      } else {\n        setGlobalLoading(false);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      setUser,\n      globalLoading,\n      setGlobalLoading,\n      currentPath\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"Di/sk0Bit0O7ZcvrFSzPxij59u0=\", false, function () {\n  return [useLocation];\n});\n\n_c = AuthProvider;\nconst AuthConsumer = AuthContext.Consumer;\nexport { AuthContext, AuthProvider, AuthConsumer };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/foris-react-redux/client/src/AuthContext.jsx"],"names":["React","firebaseAuth","useLocation","history","AuthContext","createContext","AuthProvider","children","globalLoading","setGlobalLoading","useState","currentPath","setCurrentPath","location","user","setUser","uid","useEffect","pathname","onAuthStateChanged","result","match","push","AuthConsumer","Consumer"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,WAA+B,gBAAGJ,KAAK,CAACK,aAAN,EAAxC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBC,EAAAA;AADoB,CAAD,KAIK;AAAA;;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,KAAK,CAACU,QAAN,CAAe,IAAf,CAA1C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtC;AACA,QAAMG,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACU,QAAN,CAAe;AACrCM,IAAAA,GAAG,EAAE;AADgC,GAAf,CAAxB;AAIAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBL,IAAAA,cAAc,CAACC,QAAQ,CAACK,QAAV,CAAd;AACD,GAFD,EAEG,CAACL,QAAD,CAFH;AAIAb,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBhB,IAAAA,YAAY,CAACkB,kBAAb,CAAgCC,MAAM,IAAI;AACxC,UAAIA,MAAJ,EAAY;AACV,YAAIA,MAAM,CAACJ,GAAP,KAAeF,IAAI,CAACE,GAAxB,EAA6B;AAC3BD,UAAAA,OAAO,CAACK,MAAD,CAAP;AACAX,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;;AAEA,cAAIE,WAAW,CAACU,KAAZ,CAAkB,6BAAlB,CAAJ,EAAsD;AACpDlB,YAAAA,OAAO,CAACmB,IAAR,CAAa,UAAb;AACD;AACF,SAPD,MAOO;AACLb,UAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,OAXD,MAWO;AACLA,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,KAfD;AAgBD,GAjBD;AAmBA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLK,MAAAA,IADK;AAELC,MAAAA,OAFK;AAGLP,MAAAA,aAHK;AAILC,MAAAA,gBAJK;AAKLE,MAAAA;AALK,KADT;AAAA,cAQGJ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/CD;;GAAMD,Y;UAOaJ,W;;;KAPbI,Y;AAiDN,MAAMiB,YAAY,GAAGnB,WAAW,CAACoB,QAAjC;AACA,SAASpB,WAAT,EAAsBE,YAAtB,EAAoCiB,YAApC","sourcesContent":["// @flow\nimport * as React from 'react'\nimport { firebaseAuth } from './util/firebase'\nimport { useLocation } from 'react-router-dom'\nimport history from './util/history'\n\nconst AuthContext: React.Context<any> = React.createContext()\n\nconst AuthProvider = ({\n  children,\n}: {\n  children: React.Element<any>,\n}): React.Element<any> => {\n  const [globalLoading, setGlobalLoading] = React.useState(true)\n  const [currentPath, setCurrentPath] = React.useState('')\n  const location = useLocation()\n  const [user, setUser] = React.useState({\n    uid: '',\n  })\n\n  React.useEffect(() => {\n    setCurrentPath(location.pathname)\n  }, [location])\n\n  React.useEffect(() => {\n    firebaseAuth.onAuthStateChanged(result => {\n      if (result) {\n        if (result.uid !== user.uid) {\n          setUser(result)\n          setGlobalLoading(false)\n\n          if (currentPath.match(/(auth\\/signin|auth\\/signup)/)) {\n            history.push('/schools')\n          }\n        } else {\n          setGlobalLoading(false)\n        }\n      } else {\n        setGlobalLoading(false)\n      }\n    })\n  })\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        setUser,\n        globalLoading,\n        setGlobalLoading,\n        currentPath,\n      }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nconst AuthConsumer = AuthContext.Consumer\nexport { AuthContext, AuthProvider, AuthConsumer }\n"]},"metadata":{},"sourceType":"module"}