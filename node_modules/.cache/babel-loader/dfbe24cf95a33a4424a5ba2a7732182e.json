{"ast":null,"code":"import * as React from 'react';\nimport { useQuery } from 'react-query';\nimport { googleProvider, firebaseAuth } from '../util/firebase';\nimport { api } from '../util/api';\nimport { AuthContext } from '../AuthContext';\nimport axios from 'axios';\nexport const onAuthStateChange = callback => {\n  return firebaseAuth.onAuthStateChanged(user => {\n    if (user) {\n      callback({\n        signedIn: true,\n        profile: user\n      });\n    } else {\n      callback({\n        signedIn: false\n      });\n    }\n  });\n};\nexport const signUpWithEmail = async ({\n  email,\n  password\n}) => {\n  try {\n    const user = await firebaseAuth.createUserWithEmailAndPassword(email, password);\n    const token = await user.getIdToken(true);\n    const {\n      data\n    } = await api.put('http://localhost:3080/api/v1/users/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }, user);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signInWithEmail = async ({\n  email,\n  password\n}) => {\n  try {\n    const {\n      user\n    } = await firebaseAuth.signInWithEmailAndPassword(email, password);\n    const token = await user.getIdToken(true);\n    const {\n      data\n    } = await axios.get(`http://localhost:3080/api/v1/users/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data.user;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signInWithGoogle = async () => {\n  try {\n    const {\n      user\n    } = await firebaseAuth.signInWithPopup(googleProvider);\n    const token = await user.getIdToken(true);\n    const {\n      data\n    } = await axios.get(`http://localhost:3080/api/v1/users/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const forgotPassword = async () => {};\nexport const signOut = () => {\n  firebaseAuth.signOut();\n};\nexport const deleteAccount = () => {};\nexport const likeSchoolById = async schoolId => {\n  try {\n    const user = await firebaseAuth.currentUser;\n    const token = await user.getIdToken();\n    const {\n      data\n    } = await axios.get(`http://localhost:3080/api/v1/users/like/?schoolId=${schoolId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    console.log('ðŸš€ ~ file: useSchools.js ~ likeSchoolById() try-catch ~ err', err);\n  }\n};\nexport const unlikeSchoolById = async schoolId => {\n  try {\n    const user = await firebaseAuth.currentUser;\n    const token = await user.getIdToken();\n    const {\n      data\n    } = await axios.get(`http://localhost:3080/api/v1/users/unlike?schoolId=${schoolId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    console.log('ðŸš€ ~ file: useSchools.js ~ unlikeSchoolById() try-catch ~ err', err);\n  }\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/foris-react-redux/client/src/hooks/useAuth.js"],"names":["React","useQuery","googleProvider","firebaseAuth","api","AuthContext","axios","onAuthStateChange","callback","onAuthStateChanged","user","signedIn","profile","signUpWithEmail","email","password","createUserWithEmailAndPassword","token","getIdToken","data","put","headers","Authorization","err","console","log","signInWithEmail","signInWithEmailAndPassword","get","signInWithGoogle","signInWithPopup","forgotPassword","signOut","deleteAccount","likeSchoolById","schoolId","currentUser","unlikeSchoolById"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react'\nimport { useQuery } from 'react-query'\nimport { googleProvider, firebaseAuth } from '../util/firebase'\nimport { api } from '../util/api'\nimport { AuthContext } from '../AuthContext'\nimport axios from 'axios'\n\nexport const onAuthStateChange = (callback: any): any => {\n  return firebaseAuth.onAuthStateChanged(user => {\n    if (user) {\n      callback({ signedIn: true, profile: user })\n    } else {\n      callback({ signedIn: false })\n    }\n  })\n}\n\nexport const signUpWithEmail = async ({\n  email,\n  password,\n}: {\n  email: string,\n  password: string,\n}): Function => {\n  try {\n    const user = await firebaseAuth.createUserWithEmailAndPassword(\n      email,\n      password\n    )\n    const token = await user.getIdToken(true)\n    const { data } = await api.put(\n      'http://localhost:3080/api/v1/users/',\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      },\n      user\n    )\n    return data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const signInWithEmail = async ({\n  email,\n  password,\n}: {\n  email: string,\n  password: string,\n}): Promise<any> => {\n  try {\n    const { user } = await firebaseAuth.signInWithEmailAndPassword(\n      email,\n      password\n    )\n    const token = await user.getIdToken(true)\n    const { data } = await axios.get(`http://localhost:3080/api/v1/users/`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    return data.user\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const signInWithGoogle = async (): Promise<any> => {\n  try {\n    const { user } = await firebaseAuth.signInWithPopup(googleProvider)\n    const token = await user.getIdToken(true)\n    const { data } = await axios.get(`http://localhost:3080/api/v1/users/`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    return data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const forgotPassword = async () => {}\n\nexport const signOut = () => {\n  firebaseAuth.signOut()\n}\n\nexport const deleteAccount = () => {}\n\nexport const likeSchoolById = async (schoolId: string): Promise<any> => {\n  try {\n    const user = await firebaseAuth.currentUser\n    const token = await user.getIdToken()\n    const { data } = await axios.get(\n      `http://localhost:3080/api/v1/users/like/?schoolId=${schoolId}`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    )\n    return data\n  } catch (err) {\n    console.log(\n      'ðŸš€ ~ file: useSchools.js ~ likeSchoolById() try-catch ~ err',\n      err\n    )\n  }\n}\n\nexport const unlikeSchoolById = async (schoolId: string): Promise<any> => {\n  try {\n    const user = await firebaseAuth.currentUser\n    const token = await user.getIdToken()\n    const { data } = await axios.get(\n      `http://localhost:3080/api/v1/users/unlike?schoolId=${schoolId}`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    )\n    return data\n  } catch (err) {\n    console.log(\n      'ðŸš€ ~ file: useSchools.js ~ unlikeSchoolById() try-catch ~ err',\n      err\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}