{"ast":null,"code":"import { useQuery } from 'react-query';\nimport { googleProvider, firebaseAuth } from '../util/firebase';\nimport { api } from '../util/api';\nimport axios from 'axios';\nexport const signUpWithEmail = async ({\n  email,\n  password\n}) => {\n  try {\n    const user = await firebaseAuth.createUserWithEmailAndPassword(email, password);\n    const token = await user.getIdToken(true);\n    const {\n      data\n    } = await api.put('http://localhost:8003/users/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }, user);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signInWithEmail = async ({\n  email,\n  password\n}) => {\n  try {\n    const {\n      user\n    } = await firebaseAuth.signInWithEmailAndPassword(email, password);\n    const token = await user.getIdToken(true);\n    const {\n      data\n    } = await axios.get(`http://localhost:8003/users/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data.user;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const signInWithGoogle = async () => {\n  try {\n    const {\n      user\n    } = await firebaseAuth.signInWithPopup(googleProvider);\n    const token = await user.getIdToken(true);\n    const {\n      data\n    } = await axios.get(`http://localhost:8003/users/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst forgotPassword = async () => {};\n\nconst signOut = () => {\n  firebaseAuth.signOut().then(() => {\n    console.log('sign out success!');\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst deleteAccount = () => {};\n\nexport const likeSchoolById = async schoolId => {\n  try {\n    const user = await firebaseAuth.currentUser;\n    const token = await user.getIdToken();\n    const {\n      data\n    } = await axios.get(`http://localhost:3080/api/v1/users/like/?schoolId=${schoolId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    console.log('ðŸš€ ~ file: useSchools.js ~ likeSchoolById() try-catch ~ err', err);\n  }\n};\nexport const unlikeSchoolById = async schoolId => {\n  try {\n    const user = await firebaseAuth.currentUser;\n    const token = await user.getIdToken();\n    const {\n      data\n    } = await axios.get(`http://localhost:3080/api/v1/users/unlike?schoolId=${schoolId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    console.log('ðŸš€ ~ file: useSchools.js ~ unlikeSchoolById() try-catch ~ err', err);\n  }\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/foris-react-redux/client/src/hooks/useAuth.js"],"names":["useQuery","googleProvider","firebaseAuth","api","axios","signUpWithEmail","email","password","user","createUserWithEmailAndPassword","token","getIdToken","data","put","headers","Authorization","err","console","log","signInWithEmail","signInWithEmailAndPassword","get","signInWithGoogle","signInWithPopup","forgotPassword","signOut","then","catch","deleteAccount","likeSchoolById","schoolId","currentUser","unlikeSchoolById"],"mappings":"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","sourcesContent":["// @flow\nimport { useQuery } from 'react-query'\nimport { googleProvider, firebaseAuth } from '../util/firebase'\nimport { api } from '../util/api'\nimport axios from 'axios'\n\nexport const signUpWithEmail = async ({\n  email,\n  password,\n}: {\n  email: string,\n  password: string,\n}): Function => {\n  try {\n    const user = await firebaseAuth.createUserWithEmailAndPassword(\n      email,\n      password\n    )\n    const token = await user.getIdToken(true)\n    const { data } = await api.put(\n      'http://localhost:8003/users/',\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      },\n      user\n    )\n    return data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const signInWithEmail = async ({\n  email,\n  password,\n}: {\n  email: string,\n  password: string,\n}): Promise<any> => {\n  try {\n    const { user } = await firebaseAuth.signInWithEmailAndPassword(\n      email,\n      password\n    )\n    const token = await user.getIdToken(true)\n    const { data } = await axios.get(`http://localhost:8003/users/`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    return data.user\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nexport const signInWithGoogle = async (): Promise<any> => {\n  try {\n    const { user } = await firebaseAuth.signInWithPopup(googleProvider)\n    const token = await user.getIdToken(true)\n    const { data } = await axios.get(`http://localhost:8003/users/`, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n    return data\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nconst forgotPassword = async () => {}\n\nconst signOut = () => {\n  firebaseAuth\n    .signOut()\n    .then(() => {\n      console.log('sign out success!')\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nconst deleteAccount = () => {}\n\nexport const likeSchoolById = async (schoolId: string): Promise<any> => {\n  try {\n    const user = await firebaseAuth.currentUser\n    const token = await user.getIdToken()\n    const { data } = await axios.get(\n      `http://localhost:3080/api/v1/users/like/?schoolId=${schoolId}`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    )\n    return data\n  } catch (err) {\n    console.log(\n      'ðŸš€ ~ file: useSchools.js ~ likeSchoolById() try-catch ~ err',\n      err\n    )\n  }\n}\n\nexport const unlikeSchoolById = async (schoolId: string): Promise<any> => {\n  try {\n    const user = await firebaseAuth.currentUser\n    const token = await user.getIdToken()\n    const { data } = await axios.get(\n      `http://localhost:3080/api/v1/users/unlike?schoolId=${schoolId}`,\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    )\n    return data\n  } catch (err) {\n    console.log(\n      'ðŸš€ ~ file: useSchools.js ~ unlikeSchoolById() try-catch ~ err',\n      err\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}