{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/foris-react-redux/client/src/components/Auth/AuthCommon/PasswordInput/PasswordInput.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport TextField from \"@material-ui/core/esm/TextField\";\nimport TogglePasswordVisibility from '../TogglePasswordVisibility/TogglePasswordVisibility';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  passwordField: {\n    marginTop: '1rem !important',\n    width: '100%'\n  }\n}));\n\nconst PasswordInput = ({\n  control,\n  register,\n  helperText = ''\n}) => {\n  _s();\n\n  const c = useStyles();\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    type: showPassword ? 'text' : 'password',\n    variant: \"outlined\",\n    inputRef: register,\n    name: \"password\",\n    label: \"password\",\n    className: c.passwordField,\n    autoComplete: \"current-password\",\n    control: control,\n    helperText: helperText,\n    required: true,\n    InputProps: {\n      endAdornment: /*#__PURE__*/_jsxDEV(TogglePasswordVisibility, {\n        showPassword: showPassword,\n        handleClickShowPassword: handleClickShowPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PasswordInput, \"boEnzkj20K5KE7F88OJVly1+yxg=\", false, function () {\n  return [useStyles];\n});\n\n_c = PasswordInput;\nexport default PasswordInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/foris-react-redux/client/src/components/Auth/AuthCommon/PasswordInput/PasswordInput.jsx"],"names":["React","TogglePasswordVisibility","makeStyles","useStyles","theme","passwordField","marginTop","width","PasswordInput","control","register","helperText","c","showPassword","setShowPassword","useState","handleClickShowPassword","prevShowPassword","endAdornment"],"mappings":";;;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,wBAAP,MAAqC,sDAArC;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE,iBADE;AAEbC,IAAAA,KAAK,EAAE;AAFM;AADsB,CAAL,CAAN,CAA5B;;AAOA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,OADqB;AAErBC,EAAAA,QAFqB;AAGrBC,EAAAA,UAAU,GAAG;AAHQ,CAAD,KAQI;AAAA;;AACxB,QAAMC,CAAC,GAAGT,SAAS,EAAnB;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCd,KAAK,CAACe,QAAN,CAAe,KAAf,CAAxC;;AAEA,QAAMC,uBAAuB,GAAG,MAC9BF,eAAe,CAACG,gBAAgB,IAAI,CAACA,gBAAtB,CADjB;;AAGA,sBACE,QAAC,SAAD;AACE,IAAA,IAAI,EAAEJ,YAAY,GAAG,MAAH,GAAY,UADhC;AAEE,IAAA,OAAO,EAAC,UAFV;AAGE,IAAA,QAAQ,EAAEH,QAHZ;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,SAAS,EAAEE,CAAC,CAACP,aANf;AAOE,IAAA,YAAY,EAAC,kBAPf;AAQE,IAAA,OAAO,EAAEI,OARX;AASE,IAAA,UAAU,EAAEE,UATd;AAUE,IAAA,QAAQ,MAVV;AAWE,IAAA,UAAU,EAAE;AACVO,MAAAA,YAAY,eACV,QAAC,wBAAD;AACE,QAAA,YAAY,EAAEL,YADhB;AAEE,QAAA,uBAAuB,EAAEG;AAF3B;AAAA;AAAA;AAAA;AAAA;AAFQ;AAXd;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CArCD;;GAAMR,a;UASML,S;;;KATNK,a;AAuCN,eAAeA,aAAf","sourcesContent":["// @flow\nimport * as React from 'react'\nimport { TextField } from '@material-ui/core'\nimport TogglePasswordVisibility from '../TogglePasswordVisibility/TogglePasswordVisibility'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  passwordField: {\n    marginTop: '1rem !important',\n    width: '100%',\n  },\n}))\n\nconst PasswordInput = ({\n  control,\n  register,\n  helperText = '',\n}: {\n  control: any,\n  register: any,\n  helperText: string,\n}): React.Element<any> => {\n  const c = useStyles()\n  const [showPassword, setShowPassword] = React.useState(false)\n\n  const handleClickShowPassword = () =>\n    setShowPassword(prevShowPassword => !prevShowPassword)\n\n  return (\n    <TextField\n      type={showPassword ? 'text' : 'password'}\n      variant=\"outlined\"\n      inputRef={register}\n      name=\"password\"\n      label=\"password\"\n      className={c.passwordField}\n      autoComplete=\"current-password\"\n      control={control}\n      helperText={helperText}\n      required\n      InputProps={{\n        endAdornment: (\n          <TogglePasswordVisibility\n            showPassword={showPassword}\n            handleClickShowPassword={handleClickShowPassword}\n          />\n        ),\n      }}\n    />\n  )\n}\n\nexport default PasswordInput\n"]},"metadata":{},"sourceType":"module"}