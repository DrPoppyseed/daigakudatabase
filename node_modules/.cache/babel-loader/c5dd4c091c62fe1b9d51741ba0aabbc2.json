{"ast":null,"code":"var _jsxFileName = \"/Applications/MAMP/htdocs/foris-react-redux/client/src/components/MyPage/EditProfileDialog/EditProfileDialog.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport Dialog from \"@material-ui/core/esm/Dialog\";\nimport DialogTitle from \"@material-ui/core/esm/DialogTitle\";\nimport DialogContent from \"@material-ui/core/esm/DialogContent\";\nimport DialogActions from \"@material-ui/core/esm/DialogActions\";\nimport TextField from \"@material-ui/core/esm/TextField\";\nimport Typography from \"@material-ui/core/esm/Typography\";\nimport Button from \"@material-ui/core/esm/Button\";\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditProfileDialog = props => {\n  _s();\n\n  const c = useStyles();\n  const [isPageLoading, setIsPageLoading] = React.useState(true);\n  const [userSchool, setUserSchool] = React.useState('');\n  const [userProfileText, setUserProfileText] = React.useState('');\n  const [userName, setUserName] = React.useState({\n    firstName: '',\n    lastName: ''\n  });\n  const userProfile = {\n    belongsTo: {\n      name: 'test'\n    },\n    firstName: 'firstName',\n    lastName: 'lastName',\n    profileText: 'this is my dummy profileText',\n    imageUrl: ''\n  };\n  React.useEffect(() => {\n    if (!isPageLoading) {\n      setUserSchool(userProfile.belongsTo.name);\n      setUserProfileText(userProfile.profileText);\n      setUserName({\n        firstName: userProfile.firstName,\n        lastName: userProfile.lastName\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isPageLoading]);\n\n  const handleNameChange = event => {\n    setUserName({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleSchoolChange = event => {\n    setUserSchool(event.target.value);\n  };\n\n  const handleCancelClick = () => {\n    props.handleClose();\n    setUserName({\n      firstName: userProfile.firstName,\n      lastName: userProfile.lastName\n    });\n    setUserSchool(userProfile.belongsTo.name);\n  };\n\n  const handleProfileTextChange = event => {\n    setUserProfileText(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    scroll: \"paper\",\n    className: c.root,\n    open: props.open,\n    onClose: props.handleClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      className: c.dialogTitle,\n      children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u3092\\u7DE8\\u96C6\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      className: c.dialogContent,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: c.topContentContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            className: c.topContentTitle,\n            children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u30C8\\u30C3\\u30D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: c.topContentArea,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: c.editProifleImageArea,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: userProfile.imageUrl,\n                className: c.editProfileImage,\n                height: 140,\n                width: 140,\n                alt: \"user profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: c.topTextArea,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: clsx(c.fieldContainer, c.nameFieldContainer),\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  id: \"edit-lastName\",\n                  name: \"lastName\",\n                  label: \"\\u59D3\",\n                  className: clsx(c.nameField, c.lastNameField),\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  value: userName.lastName,\n                  onChange: handleNameChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  id: \"edit-firstName\",\n                  name: \"firstName\",\n                  label: \"\\u540D\\u5B57\",\n                  className: c.nameField,\n                  InputLabelProps: {\n                    shrink: true\n                  },\n                  value: userName.firstName,\n                  onChange: handleNameChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: clsx(c.fieldContainer, c.schoolFieldContainer),\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  className: c.schoolField,\n                  id: \"edit-school\",\n                  label: \"\\u5927\\u5B66\\u3068\\u5B66\\u90E8\",\n                  value: userSchool,\n                  onChange: handleSchoolChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: c.messageContentContainer,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            className: c.messageContentTitle,\n            children: \"\\u30D7\\u30ED\\u30D5\\u30A3\\u30FC\\u30EB\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            multiline: true,\n            rows: 4,\n            variant: \"outlined\",\n            id: \"edit-profileText\",\n            name: \"profileText\",\n            className: c.profileText,\n            onChange: handleProfileTextChange,\n            value: userProfileText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      className: c.dialogActions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: c.cancelButton,\n        onClick: handleCancelClick,\n        children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: c.saveButton,\n        disableElevation: true,\n        children: \"\\u5909\\u66F4\\u3092\\u4FDD\\u5B58\\u3059\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditProfileDialog, \"YhDCV8a5p2MzDGp0vVBYVxTqmAk=\", false, function () {\n  return [useStyles];\n});\n\n_c = EditProfileDialog;\nexport default EditProfileDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfileDialog\");","map":{"version":3,"sources":["/Applications/MAMP/htdocs/foris-react-redux/client/src/components/MyPage/EditProfileDialog/EditProfileDialog.jsx"],"names":["React","clsx","useStyles","EditProfileDialog","props","c","isPageLoading","setIsPageLoading","useState","userSchool","setUserSchool","userProfileText","setUserProfileText","userName","setUserName","firstName","lastName","userProfile","belongsTo","name","profileText","imageUrl","useEffect","handleNameChange","event","target","value","handleSchoolChange","handleCancelClick","handleClose","handleProfileTextChange","root","open","dialogTitle","dialogContent","topContentContainer","topContentTitle","topContentArea","editProifleImageArea","editProfileImage","topTextArea","fieldContainer","nameFieldContainer","nameField","lastNameField","shrink","schoolFieldContainer","schoolField","messageContentContainer","messageContentTitle","dialogActions","cancelButton","saveButton"],"mappings":"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","sourcesContent":["// @flow\nimport * as React from 'react'\nimport clsx from 'clsx'\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Typography,\n  Button,\n} from '@material-ui/core'\nimport useStyles from './styles'\n\ntype Props = {\n  open: boolean,\n  handleClose: any,\n}\n\nconst EditProfileDialog = (props: Props): React.Node => {\n  const c = useStyles()\n  const [isPageLoading, setIsPageLoading] = React.useState(true)\n  const [userSchool, setUserSchool] = React.useState('')\n  const [userProfileText, setUserProfileText] = React.useState('')\n  const [userName, setUserName] = React.useState({\n    firstName: '',\n    lastName: '',\n  })\n\n  const userProfile = {\n    belongsTo: { name: 'test' },\n    firstName: 'firstName',\n    lastName: 'lastName',\n    profileText: 'this is my dummy profileText',\n    imageUrl: '',\n  }\n\n  React.useEffect(() => {\n    if (!isPageLoading) {\n      setUserSchool(userProfile.belongsTo.name)\n      setUserProfileText(userProfile.profileText)\n      setUserName({\n        firstName: userProfile.firstName,\n        lastName: userProfile.lastName,\n      })\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPageLoading])\n\n  const handleNameChange = (event): void => {\n    setUserName({ [event.target.name]: event.target.value })\n  }\n\n  const handleSchoolChange = (event): void => {\n    setUserSchool(event.target.value)\n  }\n\n  const handleCancelClick = (): void => {\n    props.handleClose()\n    setUserName({\n      firstName: userProfile.firstName,\n      lastName: userProfile.lastName,\n    })\n    setUserSchool(userProfile.belongsTo.name)\n  }\n\n  const handleProfileTextChange = (event): void => {\n    setUserProfileText(event.target.value)\n  }\n\n  return (\n    <Dialog\n      scroll=\"paper\"\n      className={c.root}\n      open={props.open}\n      onClose={props.handleClose}>\n      <DialogTitle className={c.dialogTitle}>\n        プロフィールを編集する\n      </DialogTitle>\n      <DialogContent dividers className={c.dialogContent}>\n        <form>\n          <div className={c.topContentContainer}>\n            <Typography variant=\"subtitle2\" className={c.topContentTitle}>\n              プロフィールトップ\n            </Typography>\n            <div className={c.topContentArea}>\n              <div className={c.editProifleImageArea}>\n                {/** TODO: cropperjs, image manipulation bit. */}\n                {/* <img\n                  className={c.editProfileImage}\n                  src={props.profileImgUrl}\n                  alt={props.profileImgAlt}\n                /> */}\n                <img\n                  src={userProfile.imageUrl}\n                  className={c.editProfileImage}\n                  height={140}\n                  width={140}\n                  alt=\"user profile\"\n                />\n              </div>\n              <div className={c.topTextArea}>\n                <div className={clsx(c.fieldContainer, c.nameFieldContainer)}>\n                  {/** TODO: edit first name last name */}\n                  <TextField\n                    required\n                    id=\"edit-lastName\"\n                    name=\"lastName\"\n                    label=\"姓\"\n                    className={clsx(c.nameField, c.lastNameField)}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    value={userName.lastName}\n                    onChange={handleNameChange}\n                  />\n                  <TextField\n                    required\n                    id=\"edit-firstName\"\n                    name=\"firstName\"\n                    label=\"名字\"\n                    className={c.nameField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    value={userName.firstName}\n                    onChange={handleNameChange}\n                  />\n                </div>\n                <div className={clsx(c.fieldContainer, c.schoolFieldContainer)}>\n                  {/* <Typography variant=\"caption\">\n                    所属先（所属する学校・企業・団体）\n                  </Typography> */}\n                  <TextField\n                    required\n                    className={c.schoolField}\n                    id=\"edit-school\"\n                    label=\"大学と学部\"\n                    value={userSchool}\n                    onChange={handleSchoolChange}\n                  />\n                  {/** TODO: 所属先の認証の方法を見つける */}\n                  {/* <Button>所属先を認証する</Button> */}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={c.messageContentContainer}>\n            <Typography variant=\"subtitle2\" className={c.messageContentTitle}>\n              プロフィールメッセージ\n            </Typography>\n            <TextField\n              multiline\n              rows={4}\n              variant=\"outlined\"\n              id=\"edit-profileText\"\n              name=\"profileText\"\n              className={c.profileText}\n              onChange={handleProfileTextChange}\n              value={userProfileText}\n            />\n            {/** TODO: プロフィールの公開設定 with checkbox */}\n          </div>\n        </form>\n      </DialogContent>\n      <DialogActions className={c.dialogActions}>\n        <Button className={c.cancelButton} onClick={handleCancelClick}>\n          キャンセル\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={c.saveButton}\n          disableElevation>\n          変更を保存する\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default EditProfileDialog\n"]},"metadata":{},"sourceType":"module"}